https://leetcode.com/tag/tree/
https://leetcode.com/tag/dynamic-programming/

    https://leetcode.com/problems/maximum-subarray/
    Solution Idea (NOT verified)
    1. Skip continueously N at HEAD & TAIL
        -NOTE: save max N for answer of all-negative string
    2. Merge all continueously N/P, to be a P/PNP/PNPNP/... string
        -Controversial : Is this a nessary step ?
    3. For all PNP, if both P add N > 0, merge PNP into P
        -Recursively do this because some N could be merge after other N merged.
        -Be careful to termination condition
    4. Find the largest P in the string.

